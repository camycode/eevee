var gulp=require("gulp"),console=require("better-console"),extend=require("extend"),fs=require("fs"),mkdirp=require("mkdirp"),path=require("path"),runSequence=require("run-sequence"),chmod=require("gulp-chmod"),del=require("del"),jsonEditor=require("gulp-json-editor"),plumber=require("gulp-plumber"),prompt=require("gulp-prompt"),rename=require("gulp-rename"),replace=require("gulp-replace"),requireDotFile=require("require-dot-file"),wrench=require("wrench"),install=require("./config/project/install"),config=require("./config/user"),release=require("./config/project/release"),questions=install.questions,files=install.files,folders=install.folders,regExp=install.regExp,settings=install.settings,source=install.source;module.exports=function(e){var o,i=requireDotFile("semantic.json"),s=install.getPackageManager(),n=questions.root,t=!1;if(console.clear(),install.isSubModule())return void console.info("SUI is a sub-module, skipping end-user install");if(i&&"NPM"===s.name){var r=path.join(s.root,i.base),l={config:path.join(s.root,files.config),tasks:path.join(r,folders.tasks),themeImport:path.join(r,folders.themeImport),definition:path.join(i.paths.source.definitions),site:path.join(i.paths.source.site),theme:path.join(i.paths.source.themes),defaultTheme:path.join(i.paths.source.themes,folders.defaultTheme)};if(fs.existsSync(l.definition))return i.version!==release.version?(console.log("Updating Semantic UI from "+i.version+" to "+release.version),console.info("Updating ui definitions..."),wrench.copyDirSyncRecursive(source.definitions,l.definition,settings.wrench.overwrite),console.info("Updating default theme..."),wrench.copyDirSyncRecursive(source.themes,l.theme,settings.wrench.merge),wrench.copyDirSyncRecursive(source.defaultTheme,l.defaultTheme,settings.wrench.overwrite),console.info("Updating tasks..."),wrench.copyDirSyncRecursive(source.tasks,l.tasks,settings.wrench.overwrite),console.info("Updating gulpfile.js"),gulp.src(source.userGulpFile).pipe(plumber()).pipe(gulp.dest(r)),console.info("Updating theme import file"),gulp.src(source.themeImport).pipe(plumber()).pipe(gulp.dest(l.themeImport)),console.info("Adding new site theme files..."),wrench.copyDirSyncRecursive(source.site,l.site,settings.wrench.merge),console.info("Updating version..."),gulp.src(l.config).pipe(plumber()).pipe(rename(settings.rename.json)).pipe(jsonEditor({version:release.version})).pipe(gulp.dest(s.root)),void console.info('Update complete! Run "[92mgulp build[0m" to rebuild dist/ files.')):void console.log("Current version of Semantic UI already installed");console.error("Cannot locate files to update at path: ",l.definition),console.log("Running installer")}"NPM"==s.name&&(n[0].message=n[0].message.replace("{packageMessage}","We detected you are using [92m"+s.name+"[0m. Nice! ").replace("{root}",s.root),n[0]["default"]=s.root,n[1]["default"]=s.root,Array.prototype.splice.apply(questions.setup,[2,0].concat(n)),questions.cleanup=[]),gulp.task("run setup",function(){return gulp.src("gulpfile.js").pipe(prompt.prompt(questions.setup,function(e){o=e}))}),gulp.task("create install files",function(e){if(void 0===o.overwrite||"no"!=o.overwrite){console.clear(),console.log("Installing"),console.log("------------------------------");var i={config:files.config,configFolder:folders.config,site:o.site||folders.site,themeConfig:files.themeConfig,themeConfigFolder:folders.themeConfig};if(o.useRoot||o.customRoot){if(o.customRoot){if(""===o.customRoot)return void console.log("Unable to proceed, invalid project root");s.root=o.customRoot}i=extend(!1,{},i,{definition:folders.definitions,lessImport:folders.lessImport,tasks:folders.tasks,theme:folders.themes,defaultTheme:path.join(folders.themes,folders.defaultTheme),themeImport:folders.themeImport}),t=path.join(s.root,o.semanticRoot);for(var n in i)i.hasOwnProperty(n)&&(i[n]="config"==n||"configFolder"==n?path.normalize(path.join(s.root,i[n])):path.normalize(path.join(t,i[n])));try{mkdirp.sync(t),mkdirp.sync(i.definition),mkdirp.sync(i.theme),mkdirp.sync(i.tasks)}catch(r){console.error('NPM does not have permissions to create folders at your specified path. Adjust your folders permissions and run "npm install" again')}console.log("Installing to [92m"+o.semanticRoot+"[0m"),console.info("Copying UI definitions"),wrench.copyDirSyncRecursive(source.definitions,i.definition,settings.wrench.overwrite),console.info("Copying UI themes"),wrench.copyDirSyncRecursive(source.themes,i.theme,settings.wrench.merge),wrench.copyDirSyncRecursive(source.defaultTheme,i.defaultTheme,settings.wrench.overwrite),console.info("Copying gulp tasks"),wrench.copyDirSyncRecursive(source.tasks,i.tasks,settings.wrench.overwrite),console.info("Adding theme files"),gulp.src(source.themeImport).pipe(plumber()).pipe(gulp.dest(i.themeImport)),gulp.src(source.lessImport).pipe(plumber()).pipe(gulp.dest(i.lessImport)),console.info("Creating gulpfile.js"),gulp.src(source.userGulpFile).pipe(plumber()).pipe(gulp.dest(t))}fs.existsSync(i.site)?console.info("Site folder exists, merging files (no overwrite)",i.site):console.info("Creating site theme folder",i.site),wrench.copyDirSyncRecursive(source.site,i.site,settings.wrench.merge),gulp.task("create theme.config",function(){var e=path.relative(path.resolve(i.themeConfigFolder),path.resolve(i.site)).replace(/\\/g,"/"),o="@siteFolder   : '"+e+"/';";return console.info("Adjusting @siteFolder to: ",e+"/"),fs.existsSync(i.themeConfig)?(console.info("Modifying src/theme.config (LESS config)",i.themeConfig),gulp.src(i.themeConfig).pipe(plumber()).pipe(replace(regExp.siteVariable,o)).pipe(gulp.dest(i.themeConfigFolder))):(console.info("Creating src/theme.config (LESS config)",i.themeConfig),gulp.src(source.themeConfig).pipe(plumber()).pipe(rename({extname:""})).pipe(replace(regExp.siteVariable,o)).pipe(gulp.dest(i.themeConfigFolder)))}),gulp.task("create semantic.json",function(){var e=install.createJSON(o);return fs.existsSync(files.config)?(console.info("Extending config file (semantic.json)",i.config),gulp.src(i.config).pipe(plumber()).pipe(rename(settings.rename.json)).pipe(jsonEditor(e)).pipe(gulp.dest(i.configFolder))):(console.info("Creating config file (semantic.json)",i.config),gulp.src(source.config).pipe(plumber()).pipe(rename({extname:""})).pipe(jsonEditor(e)).pipe(gulp.dest(i.configFolder)))}),runSequence("create theme.config","create semantic.json",e)}}),gulp.task("clean up install",function(){return t?(console.log("\n Setup Complete! \n Installing Peer Dependencies. [0;31mPlease refrain from ctrl + c[0m... \n After completion navigate to [92m"+o.semanticRoot+'[0m and run "[92mgulp build[0m" to build'),process.exit(0)):(console.log(""),console.log("")),gulp.src("gulpfile.js").pipe(prompt.prompt(questions.cleanup,function(e){"yes"==e.cleanup&&del(install.setupFiles),"yes"==e.build&&gulp.start("build")}))}),runSequence("run setup","create install files","clean up install",e)};