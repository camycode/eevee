var gulp=require("gulp"),console=require("better-console"),fs=require("fs"),autoprefixer=require("gulp-autoprefixer"),chmod=require("gulp-chmod"),clone=require("gulp-clone"),gulpif=require("gulp-if"),header=require("gulp-header"),less=require("gulp-less"),minifyCSS=require("gulp-minify-css"),plumber=require("gulp-plumber"),print=require("gulp-print"),rename=require("gulp-rename"),replace=require("gulp-replace"),uglify=require("gulp-uglify"),util=require("gulp-util"),watch=require("gulp-watch"),config=require("../config/docs"),tasks=require("../config/tasks"),configSetup=require("../config/project/config"),install=require("../config/project/install"),banner=tasks.banner,comments=tasks.regExp.comments,log=tasks.log,settings=tasks.settings,globs,assets,output,source;require("../collections/internal")(gulp),module.exports=function(){config=configSetup.addDerivedValues(config),globs=config.globs,assets=config.paths.assets,output=config.paths.output,source=config.paths.source,gulp.watch(["src/**/*.*"],function(e){return console.clear(),gulp.src(e.path,{base:"src/"}).pipe(gulp.dest(output.less)).pipe(print(log.created))}),gulp.watch(["examples/**/*.*"],function(e){return console.clear(),gulp.src(e.path,{base:"examples/"}).pipe(gulp.dest(output.examples)).pipe(print(log.created))}),gulp.watch([source.config,source.definitions+"/**/*.less",source.site+"/**/*.{overrides,variables}",source.themes+"/**/*.{overrides,variables}"],function(e){var s,i,p,t,r,n,o,c;gulp.src(e.path).pipe(print(log.modified)),c=-1!==e.path.indexOf("theme.config")||-1!==e.path.indexOf("site.variables"),n=-1!==e.path.indexOf(source.themes),o=-1!==e.path.indexOf(source.site),r=-1!==e.path.indexOf(source.definitions),c||(n?(console.log("Change detected in packaged theme"),s=util.replaceExtension(e.path,".less"),s=s.replace(tasks.regExp.theme,source.definitions)):o?(console.log("Change detected in site theme"),s=util.replaceExtension(e.path,".less"),s=s.replace(source.site,source.definitions)):(console.log("Change detected in definition"),s=e.path),fs.existsSync(s)?(i=gulp.src(s).pipe(plumber()).pipe(less(settings.less)).pipe(replace(comments.variables["in"],comments.variables.out)).pipe(replace(comments.large["in"],comments.large.out)).pipe(replace(comments.small["in"],comments.small.out)).pipe(replace(comments.tiny["in"],comments.tiny.out)).pipe(autoprefixer(settings.prefix)).pipe(gulpif(config.hasPermission,chmod(config.permission))),t=i.pipe(clone()),p=i.pipe(clone()),t.pipe(plumber()).pipe(replace(assets.source,assets.uncompressed)).pipe(header(banner,settings.header)).pipe(gulp.dest(output.uncompressed)).pipe(print(log.created)).on("end",function(){gulp.start("package uncompressed docs css")}),p=i.pipe(plumber()).pipe(replace(assets.source,assets.compressed)).pipe(minifyCSS(settings.minify)).pipe(rename(settings.rename.minCSS)).pipe(header(banner,settings.header)).pipe(gulp.dest(output.compressed)).pipe(print(log.created)).on("end",function(){gulp.start("package compressed docs css")})):console.log("Cannot find UI definition at path",s))}),gulp.watch([source.definitions+"/**/*.js"],function(e){gulp.src(e.path).pipe(plumber()).pipe(gulpif(config.hasPermission,chmod(config.permission))).pipe(gulp.dest(output.uncompressed)).pipe(print(log.created)).pipe(uglify(settings.uglify)).pipe(rename(settings.rename.minJS)).pipe(gulp.dest(output.compressed)).pipe(print(log.created)).on("end",function(){gulp.start("package compressed docs js"),gulp.start("package uncompressed docs js")})}),gulp.watch([source.themes+"/**/assets/**/"+globs.components+"?(s).*"],function(e){gulp.src(e.path,{base:source.themes}).pipe(gulpif(config.hasPermission,chmod(config.permission))).pipe(gulp.dest(output.themes)).pipe(print(log.created))})};