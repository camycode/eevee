var gulp=require("gulp"),console=require("better-console"),fs=require("fs"),map=require("map-stream"),autoprefixer=require("gulp-autoprefixer"),chmod=require("gulp-chmod"),clone=require("gulp-clone"),flatten=require("gulp-flatten"),gulpif=require("gulp-if"),header=require("gulp-header"),less=require("gulp-less"),minifyCSS=require("gulp-minify-css"),plumber=require("gulp-plumber"),print=require("gulp-print"),rename=require("gulp-rename"),replace=require("gulp-replace"),uglify=require("gulp-uglify"),config=require("../config/docs"),tasks=require("../config/tasks"),configSetup=require("../config/project/config"),install=require("../config/project/install"),metadata=require("./metadata"),globs,assets,output,source,banner=tasks.banner,comments=tasks.regExp.comments,log=tasks.log,settings=tasks.settings;require("../collections/internal")(gulp),module.exports=function(e){var s,p,i;return config=configSetup.addDerivedValues(config),globs=config.globs,assets=config.paths.assets,output=config.paths.output,source=config.paths.source,console.info("Building Metadata"),gulp.src(config.paths.template.eco+globs.eco).pipe(map(metadata.parser)).on("end",function(){fs.writeFile(output.metadata+"/metadata.json",JSON.stringify(metadata.result,null,2))}),console.info("Copying examples"),gulp.src("examples/**/*.*").pipe(gulp.dest(output.examples)).pipe(print(log.created)),console.info("Copying LESS source"),gulp.src("src/**/*.*").pipe(gulp.dest(output.less)).pipe(print(log.created)),console.info("Building Semantic for docs"),install.isSetup()?(s=gulp.src(source.definitions+"/**/"+globs.components+".less").pipe(plumber()).pipe(less(settings.less)).pipe(autoprefixer(settings.prefix)).pipe(flatten()),i=s.pipe(clone()),p=s.pipe(clone()),i.pipe(plumber()).pipe(replace(comments.variables["in"],comments.variables.out)).pipe(replace(comments.large["in"],comments.large.out)).pipe(replace(comments.small["in"],comments.small.out)).pipe(replace(comments.tiny["in"],comments.tiny.out)).pipe(replace(assets.source,assets.uncompressed)).pipe(header(banner,settings.header)).pipe(gulpif(config.hasPermission,chmod(config.permission))).pipe(gulp.dest(output.uncompressed)).pipe(print(log.created)).on("end",function(){gulp.start("package uncompressed docs css")}),p=s.pipe(plumber()).pipe(clone()).pipe(replace(assets.source,assets.compressed)).pipe(minifyCSS(settings.minify)).pipe(rename(settings.rename.minCSS)).pipe(header(banner,settings.header)).pipe(gulpif(config.hasPermission,chmod(config.permission))).pipe(gulp.dest(output.compressed)).pipe(print(log.created)).on("end",function(){e(),gulp.start("package compressed docs css")}),gulp.src(source.themes+"/**/assets/**/"+globs.components+"?(s).*").pipe(gulpif(config.hasPermission,chmod(config.permission))).pipe(gulp.dest(output.themes)),void gulp.src(source.definitions+"/**/"+globs.components+".js").pipe(plumber()).pipe(flatten()).pipe(gulp.dest(output.uncompressed)).pipe(gulpif(config.hasPermission,chmod(config.permission))).pipe(print(log.created)).pipe(uglify(settings.uglify)).pipe(rename(settings.rename.minJS)).pipe(header(banner,settings.header)).pipe(gulp.dest(output.compressed)).pipe(gulpif(config.hasPermission,chmod(config.permission))).pipe(print(log.created)).on("end",function(){gulp.start("package compressed docs js"),gulp.start("package uncompressed docs js")})):void console.error('Cannot build files. Run "gulp install" to set-up Semantic')};